//! # Even Fibonacci numbers
//! ## Problem 2
//!
//! Each new term in the Fibonacci sequence is generated by adding the previous
//! two terms. By starting with 1 and 2, the first 10 terms will be:
//!
//! 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//!
//! By considering the terms in the Fibonacci sequence whose values do not
//! exceed four million, find the sum of the even-valued terms.
//!

#[derive(Debug)]
struct Fib(usize, usize);

impl Iterator for Fib {
    type Item = usize;
    fn next(&mut self) -> Option<usize> {
        let next = self.0 + self.1;
        self.0 = self.1;
        self.1 = next;
        Some(next)
    }
}

pub fn p2() -> String {
    Fib(0, 1)
        .filter(|i| i % 2 == 0)
        .take_while(|i| *i < 4_000_000)
        .sum::<usize>()
        .to_string() 
}